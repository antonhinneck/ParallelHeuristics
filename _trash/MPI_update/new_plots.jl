ds1354 = [[nothing, 1097783.38, 0],
[nothing, 1097783.38, 1],
[1184530.3082, 1101003.08, 178],
[1175266.1343, 1101003.08, 178],
[1175266.13, 1101003.08, 194],
[1120541.4090, 1101003.08, 217],
[1119422.9646, 1101003.08, 217],
[1113054.1890, 1101003.08, 217],
[1112556.1527, 1101003.08, 217],
[1107711.1018, 1101003.08, 217],
[1106004.2740, 1101003.08, 261],
[1104105.1445, 1101003.08, 294],
[1102774.8172, 1101003.08, 316],
[1102584.2477, 1101003.08, 403],
[1102571.7911, 1101003.08, 434],
[1101521.6379, 1101003.08, 434],
[1101475.2348, 1101003.08, 475],
[1101435.3691, 1101003.08, 475],
[1101322.7168, 1101003.08, 889]]

x1354 = Vector{Float64}()
y1354 = Vector{Float64}()

for i in 1:length(ds1354)
        if ds1354[i][1] != nothing
                push!(y1354, 100 * (ds1354[i][1] - ds1354[i][2]) / ds1354[i][2])
                push!(x1354, ds1354[i][3])
        end
end

ds1354s = [[1121708.69, 1101003.08, 0],
[1115310.8296, 1101003.08, 14],
[1109951.0101, 1101003.08, 35],
[1104642.0511, 1101003.08, 35],
[1102709.3728, 1101003.08, 85],
[1102484.6638, 1101003.08, 148],
[1102483.1047, 1101003.08, 148],
[1102320.0140, 1101003.08, 183],
[1101840.3728, 1101003.08, 205],
[1101833.4495, 1101003.08, 225],
[1101475.7966, 1101003.08, 380],
[1101291.8222, 1101003.08, 386],
[1101291.2686, 1101003.08, 386],
[1101198.3283, 1101003.08, 386],
[1101187.4809, 1101003.08, 410],
[1101181.1875, 1101003.08, 410],
[1101168.1922, 1101003.08, 410],
[1101164.2297, 1101003.08, 757],
[1101164.2297, 1101003.08, 900]]

x1354s = Vector{Float64}()
y1354s = Vector{Float64}()

for i in 1:length(ds1354s)
        if ds1354s[i][1] != nothing
                push!(y1354s, 100 * (ds1354s[i][1] - ds1354s[i][2]) / ds1354s[i][2])
                push!(x1354s, ds1354s[i][3])
        end
end

ds1354p = [[1121708.6931, 1101003.08, 2],
[1117494.7266, 1101003.08, 17],
[1117019.3260, 1101003.08, 24],
[1115241.0451, 1101003.08, 24],
[1105696.8744, 1101003.08, 31],
[1105532.7417, 1101003.08, 54],
[1103929.6796, 1101003.08, 54],
[1102727.4128, 1101003.08, 136],
[1102656.3289, 1101003.08, 166],
[1102143.0192, 1101003.08, 195],
[1102084.7526, 1101003.08, 240],
[1101866.1144, 1101003.08, 292],
[1101760.5321, 1101003.08, 292],
[1101757.5662, 1101003.08, 292],
[1101751.4029, 1101003.08, 292],
[1101748.9006, 1101003.08, 292],
[1101734.2873, 1101003.08, 318],
[1101682.3097, 1101003.08, 329],
[1101674.4611, 1101003.08, 343],
[1101488.3848, 1101003.08, 354],
[1101362.1682, 1101003.08, 410],
[1101260.9387, 1101003.08, 491],
[1101253.5789, 1101003.08, 505],
[1101209.5101, 1101003.08, 505],
[1101202.9055, 1101003.08, 565],
[1101118.0299, 1101003.08, 578],
[1101104.1168, 1101003.08, 596]]

x1354p = Vector{Float64}()
y1354p = Vector{Float64}()

for i in 1:length(ds1354p)
        if ds1354p[i][1] != nothing
                push!(y1354p, 100 * (ds1354p[i][1] - ds1354p[i][2]) / ds1354p[i][2])
                push!(x1354p, ds1354p[i][3])
        end
end


using PyPlot
using Colors
cd(@__DIR__)

fig = figure(figsize=(6.8, 2.6))
rc("font",family="serif",style="italic", size = 12)
rc("mathtext",fontset="dejavuserif")
rc("lines",linewidth=1)

ax = fig.add_axes([0.112, 0.18, 0.88, 0.8])

ax.tick_params(direction = "in", top = false, right = false, width = 0.8)

ax.spines["top"].set_visible(false)
ax.spines["right"].set_visible(false)

for (i,value) in enumerate(keys(ax.spines))
        ax.spines[value].set_linewidth(0.6)
end
yscale("log")
ylim(bottom = 0.0055, top = 15.0)
xlabel("Time \$[s]\$")
ylabel("gap \$[\\%]\$")

plot(x1354, y1354, color = "blue", linestyle = "dotted", lw = 1.0, label = "OTSP, no mipstart", marker = "D", ms = 3.2)
plot(x1354s, y1354s, color = "limegreen", linestyle = "dotted", lw = 1.0, label = "OTSP, mipstart", marker = "D", ms = 3.2)
plot(x1354p, y1354p, color = "darkblue", linestyle = "dotted", lw = 1.0, label = "P-OTSP", marker = "D", ms = 3.2)
plot(x1354p[length(x1354p)], y1354p[length(y1354p)], color = "darkblue", linestyle = "dotted", lw = 0.8, marker = "o", ms = 6.2)
annotate("optimal", (x1354p[length(x1354p)] + 10, y1354p[length(y1354p)] - y1354p[length(y1354p)] * 0.12), size = 10)

leg = legend(loc = "upper right", framealpha = 0.0, fancybox = false, edgecolor = "white")
leg.get_frame().set_linewidth(0.0)
fig.tight_layout()

name = "final1354"

savefig(string("plots\\",name,".pdf"), format = :pdf)
